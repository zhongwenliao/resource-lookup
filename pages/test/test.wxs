var instances = "";
var kdinstances = "";
var picslist = "";
var picslistdata = "";
var touches;
var getDataset;
var kdtouches;
var kdgetDataset;

function touchstart(event, ownerInstance) {
    instances = ownerInstance.selectComponent('.active');
    picslist = ownerInstance.selectComponent('.picslist');
    console.log(instances);
    if (instances == null) return;;
    touches = event.touches;
    getDataset = instances.getDataset();
    picslistdata = picslist.getDataset();
    console.log(JSON.stringify(picslistdata))
};

function touchmove(event, ownerInstance) {
    if (instances == null) return;;
    var newtouches = event.touches;
    if (newtouches.length <= 1) {
        var x = newtouches[(0)].pageX - touches[(0)].pageX;
        var y = newtouches[(0)].pageY - touches[(0)].pageY;
        getDataset.x += x;
        getDataset.y += y;
        instances.setStyle(({
            'transform': 'translateX(' + getDataset.x + 'px) translateY(' + getDataset.y + 'px) scale(' + getDataset.scale + ') rotate(' + getDataset.rotate + 'deg)',
            "width": getDataset.w + "px",
            "height": getDataset.h + "px",
        }));
        picslistdata.x += x;
        picslistdata.y += y;
        picslist.setStyle(({
            'transform': 'translate(0,0) rotate(' + picslistdata.rotate + 'deg)',
            "width": picslistdata.w + "px",
            "height": picslistdata.h + "px",
            "top": picslistdata.y + "px",
            "left": picslistdata.x + "px",
        }))
    } else {
        var preDistance = Math.sqrt(Math.pow((touches[(0)].pageX - touches[(1)].pageX), 2) + Math.pow((touches[(0)].pageY - touches[(1)].pageY), 2));
        var curDistance = Math.sqrt(Math.pow((newtouches[(0)].pageX - newtouches[(1)].pageX), 2) + Math.pow((newtouches[(0)].pageY - newtouches[(1)].pageY), 2));
        var scale = (curDistance - preDistance) * 0.01;
        getDataset.x = getDataset.x - getDataset.w * scale / 2;
        getDataset.w = getDataset.w + getDataset.w * scale;
        getDataset.y = getDataset.y - getDataset.h * scale / 2;
        getDataset.h = getDataset.h + getDataset.h * scale;
        instances.setStyle(({
            'transform': 'translateX(' + getDataset.x + 'px) translateY(' + getDataset.y + 'px) scale(' + getDataset.scale + ') rotate(' + getDataset.rotate + 'deg)',
            "width": getDataset.w + "px",
            "height": getDataset.h + "px",
        }))
    };
    touches = newtouches
};

function touchend(event, ownerInstance) {
    if (instances == null) return;;
    instances.callMethod("movedata", ({
        "data": getDataset,
    }));
    instances = "";
    kdinstances = "";
    picslist = ""
};

function kdtouchstart(event, ownerInstance) {
    kdtouches = event.touches;
    kdgetDataset = event.currentTarget.dataset;
    kdinstances = ownerInstance.selectComponent('.active')
};

function kdtouchmove(event, ownerInstance) {
    var newkdtouches = event.touches;
    var zx = kdgetDataset.x + kdgetDataset.w / 2 + kdgetDataset.windowwidth * 0.2;
    var zy = kdgetDataset.y + kdgetDataset.h / 2 + kdgetDataset.headerheight + kdgetDataset.masktop;
    if (kdgetDataset.kn == "kd1") {
        var preDistance = Math.sqrt(Math.pow(zx - kdtouches[(0)].pageX, 2) + Math.pow(zy - kdtouches[(0)].pageY, 2));
        var curDistance = Math.sqrt(Math.pow(zx - newkdtouches[(0)].pageX, 2) + Math.pow(zy - newkdtouches[(0)].pageY, 2));
        var scale = (curDistance - preDistance) / Math.sqrt(Math.pow(kdgetDataset.w / 2, 2) + Math.pow(kdgetDataset.h / 2, 2));
        kdgetDataset.x = kdgetDataset.x - kdgetDataset.w * scale / 2;
        kdgetDataset.w = kdgetDataset.w + kdgetDataset.w * scale
    } else if (kdgetDataset.kn == "kd2") {
        var preDistance = Math.sqrt(Math.pow(zx - kdtouches[(0)].pageX, 2) + Math.pow(zy - kdtouches[(0)].pageY, 2));
        var curDistance = Math.sqrt(Math.pow(zx - newkdtouches[(0)].pageX, 2) + Math.pow(zy - newkdtouches[(0)].pageY, 2));
        var scale = (curDistance - preDistance) / Math.sqrt(Math.pow(kdgetDataset.w / 2, 2) + Math.pow(kdgetDataset.h / 2, 2));
        kdgetDataset.y = kdgetDataset.y - kdgetDataset.h * scale / 2;
        kdgetDataset.h = kdgetDataset.h + kdgetDataset.h * scale
    } else if (kdgetDataset.kn == "xz") {
        var perAngle = Math.atan2((kdtouches[(0)].pageY - zy), (kdtouches[(0)].pageX - zx)) * 180 / Math.PI;
        var curAngle = Math.atan2((newkdtouches[(0)].pageY - zy), (newkdtouches[(0)].pageX - zx)) * 180 / Math.PI;
        if (Math.abs(perAngle - curAngle) > 1) {
            kdgetDataset.rotate = kdgetDataset.rotate + (curAngle - perAngle)
        }
    } else if (kdgetDataset.kn == "kd") {
        var preDistance = Math.sqrt(Math.pow(zx - kdtouches[(0)].pageX, 2) + Math.pow(zy - kdtouches[(0)].pageY, 2));
        var curDistance = Math.sqrt(Math.pow(zx - newkdtouches[(0)].pageX, 2) + Math.pow(zy - newkdtouches[(0)].pageY, 2));
        var scale = (curDistance - preDistance) / Math.sqrt(Math.pow(kdgetDataset.w / 2, 2) + Math.pow(kdgetDataset.h / 2, 2));
        kdgetDataset.y = kdgetDataset.y - kdgetDataset.h * scale / 2;
        kdgetDataset.h = kdgetDataset.h + kdgetDataset.h * scale;
        kdgetDataset.x = kdgetDataset.x - kdgetDataset.w * scale / 2;
        kdgetDataset.w = kdgetDataset.w + kdgetDataset.w * scale
    };
    kdinstances.setStyle(({
        'transform': 'translateX(' + kdgetDataset.x + 'px) translateY(' + kdgetDataset.y + 'px) scale(' + kdgetDataset.scale + ') rotate(' + kdgetDataset.rotate + 'deg)',
        "width": kdgetDataset.w + "px",
        "height": kdgetDataset.h + "px",
    }));
    kdtouches = newkdtouches
};

function kdtouchend(event, ownerInstance) {
    kdinstances.callMethod("movedata", ({
        "data": kdgetDataset,
    }));
    instances = "";
    kdinstances = "";
    picslist = ""
};
module.exports = ({
    touchmove: touchmove,
    touchend: touchend,
    touchstart: touchstart,
    kdtouchstart: kdtouchstart,
    kdtouchmove: kdtouchmove,
    kdtouchend: kdtouchend,
});